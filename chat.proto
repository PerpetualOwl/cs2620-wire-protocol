syntax = "proto3";

package chat;

// The ChatService definition
service ChatService {
  // Account management
  rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc ListAccounts (ListAccountsRequest) returns (ListAccountsResponse);
  rpc DeleteAccount (DeleteAccountRequest) returns (DeleteAccountResponse);
  
  // Message operations
  rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);
  rpc GetMessages (GetMessagesRequest) returns (GetMessagesResponse);
  rpc DeleteMessages (DeleteMessagesRequest) returns (DeleteMessagesResponse);
  
  // Stream for real-time message delivery when user is online
  rpc ReceiveMessages (ReceiveMessagesRequest) returns (stream Message);
}

// Account related messages
message CreateAccountRequest {
  string username = 1;
  string password_hash = 2; // Client should hash password before sending
}

message CreateAccountResponse {
  bool success = 1;
  string message = 2;
  bool account_exists = 3;
}

message LoginRequest {
  string username = 1;
  string password_hash = 2;
}

message LoginResponse {
  bool success = 1;
  string message = 2;
  int32 unread_message_count = 3;
  string session_token = 4; // Token for subsequent requests
}

message ListAccountsRequest {
  string pattern = 1; // Wildcard pattern for filtering accounts
  int32 page = 2;     // For pagination
  int32 page_size = 3;
  string session_token = 4;
}

message ListAccountsResponse {
  repeated string usernames = 1;
  int32 total_accounts = 2;
  int32 current_page = 3;
  int32 total_pages = 4;
}

message DeleteAccountRequest {
  string username = 1;
  string password_hash = 2;
  string session_token = 3;
}

message DeleteAccountResponse {
  bool success = 1;
  string message = 2;
}

// Message related messages
message Message {
  string message_id = 1;
  string sender = 2;
  string recipient = 3;
  string content = 4;
  int64 timestamp = 5;
  bool read = 6;
}

message SendMessageRequest {
  string sender = 1;
  string recipient = 2;
  string content = 3;
  string session_token = 4;
}

message SendMessageResponse {
  bool success = 1;
  string message = 2;
  string message_id = 3;
}

message GetMessagesRequest {
  string username = 1;
  int32 limit = 2;     // Number of messages to retrieve
  string session_token = 3;
}

message GetMessagesResponse {
  repeated Message messages = 1;
  int32 remaining_messages = 2;
}

message DeleteMessagesRequest {
  string username = 1;
  repeated string message_ids = 2;
  string session_token = 3;
}

message DeleteMessagesResponse {
  bool success = 1;
  string message = 2;
  int32 deleted_count = 3;
}

message ReceiveMessagesRequest {
  string username = 1;
  string session_token = 2;
}